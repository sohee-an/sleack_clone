{"version":3,"file":"477.js","mappings":"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","sources":["webpack://alecture/./components/InviteChannelModal/index.tsx","webpack://alecture/./components/Modal/styles.tsx","webpack://alecture/./components/Modal/index.tsx","webpack://alecture/./hooks/useInput.ts","webpack://alecture/./hooks/useSocket.ts","webpack://alecture/./components/DMList/styles.tsx","webpack://alecture/./components/ChannelList/index.tsx","webpack://alecture/./components/DMList/index.tsx","webpack://alecture/./components/InviteWorkspaceModal/index.tsx","webpack://alecture/./components/Menu/styles.tsx","webpack://alecture/./components/Menu/index.tsx","webpack://alecture/./layouts/Workspace/styles.tsx","webpack://alecture/./components/CreateChannelModal/index.tsx","webpack://alecture/./layouts/Workspace/index.tsx","webpack://alecture/./pages/SignUp/styles.tsx","webpack://alecture/./utils/fetcher.ts"],"sourcesContent":["import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteChannelModal: (flag: boolean) => void;\n}\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { revalidate: revalidateMembers } = useSWR<IUser[]>(\n    userData && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateMembers();\n          setShowInviteChannelModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>채널 멤버 초대</span>\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteChannelModal;\n","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CloseModalButton, CreateModal } from '@components/Modal/styles';\nimport React, { FC, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\n\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue((e.target.value as unknown) as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import io from 'socket.io-client';\nimport { useCallback } from 'react';\n\n// const backUrl = 'http://http://43.201.108.188';\nconst backUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3095' : 'http://43.201.108.188';\n\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\n  // console.log('rerender', workspace);\n  const disconnect = useCallback(() => {\n    if (workspace) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[workspace]) {\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n\n  margin-left: 10px;\n  cursor: pointer;\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","// import useSocket from '@hooks/useSocket';\nimport { CollapseButton } from '@components/DMList/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\n\nimport { NavLink, useParams } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst ChannelList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n\n  // const [socket] = useSocket(workspace);\n  const {\n    data: userData,\n    error,\n    revalidate,\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  // console.log('user', userData);\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return (\n              <NavLink\n                key={channel.name}\n                className={({ isActive }) => (isActive ? 'selected' : 'not')}\n                to={`/workspace/${workspace}/channel/${channel.name}`}\n              >\n                <span># {channel.name}</span>\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","// import useSocket from '@hooks/useSocket';\nimport { CollapseButton } from '@components/DMList/styles';\nimport useSocket from '@hooks/useSocket';\nimport { IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst DMList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const {\n    data: userData,\n    error,\n    revalidate,\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    console.log('DMList: workspace 바꼈다', workspace);\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    // 누가 온라인인지\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    // socket?.on('dm', onMessage);\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      // socket?.off('dm', onMessage);\n      // console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return (\n              <NavLink\n                key={member.id}\n                className={({ isActive }) => (isActive ? 'selected' : 'not')}\n                to={`/workspace/${workspace}/dm/${member.id}`}\n              >\n                <i\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n                    isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n                  }`}\n                  aria-hidden=\"true\"\n                  data-qa=\"presence_indicator\"\n                  data-qa-presence-self=\"false\"\n                  data-qa-presence-active=\"false\"\n                  data-qa-presence-dnd=\"false\"\n                />\n                <span>{member.nickname}</span>\n                {member.id === userData?.id && <span> (나)</span>}\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\n\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { revalidate: revalidateMember } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/members`, {\n          email: newMember,\n        })\n        .then((response) => {\n          revalidateMember();\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [workspace, newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import React, { CSSProperties, FC, useCallback } from 'react';\nimport { CloseModalButton, CreateMenu } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: (e: any) => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n}\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) return null;\n\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div style={style} onClick={stopPropagation}>\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n        {children}\n      </div>\n    </CreateMenu>\n  );\n};\n\nMenu.defaultProps = {\n  closeButton: true,\n};\n\nexport default Menu;\n","import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, VFC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n\n  const {\n    data: userData,\n    error,\n    revalidate,\n  } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n\n  const {\n    data: channelData,\n    mutate,\n    revalidate: revalidateChannel,\n  } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n\n  const onCreateChannel = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .post(\n          `/api/workspaces/${workspace}/channels`,\n          {\n            name: newChannel,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then((response) => {\n          setShowCreateChannelModal(false);\n          revalidateChannel();\n          setNewChannel('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newChannel],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>채널</span>\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n        <Button type=\"submit\">생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateChannelModal;\n","import ChannelList from '@components/ChannelList';\nimport DMList from '@components/DMList';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport Menu from '@components/Menu';\nimport Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport {\n  AddButton,\n  Channels,\n  Chats,\n  Header,\n  LogOutButton,\n  MenuScroll,\n  ProfileImg,\n  ProfileModal,\n  RightMenu,\n  WorkspaceButton,\n  WorkspaceModal,\n  WorkspaceName,\n  Workspaces,\n  WorkspaceWrapper,\n} from '@layouts/Workspace/styles';\nimport loadable from '@loadable/component';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { VFC, useCallback, useState, useEffect } from 'react';\n\nimport { Link, Route, Routes, Navigate, useParams } from 'react-router-dom';\nimport useSWR from 'swr';\nimport gravatar from 'gravatar';\nimport { toast } from 'react-toastify';\nimport CreateChannelModal from '@components/CreateChannelModal';\n\nconst Channel = loadable(() => import('@pages/Channel'));\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\n\nconst Workspace: VFC = () => {\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkpsace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const { data: userData, error, revalidate } = useSWR<IUser | false>('/api/users', fetcher);\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const [socket, disconnect] = useSocket(workspace);\n\n  const onLogout = useCallback(() => {\n    axios\n      .post('/api/users/logout', null, {\n        withCredentials: true,\n      })\n      .then(() => {\n        revalidate();\n      });\n  }, []);\n\n  useEffect(() => {\n    if (channelData && userData && socket) {\n      // console.log(socket);\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\n    }\n  }, [socket, channelData, userData]);\n\n  useEffect(() => {\n    //연결끊을때\n    return () => {\n      disconnect();\n    };\n  }, [workspace, disconnect]);\n\n  const onClickUserProfile = useCallback(() => {\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  const onCloseUserProfile = useCallback((e) => {\n    e.stopPropagation();\n    setShowUserMenu(false);\n  }, []);\n\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n    setShowCreateChannelModal(false);\n    setShowInviteWorkspaceModal(false);\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const onCreateWorkspace = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) return;\n      if (!newUrl || !newUrl.trim()) return;\n      axios\n        .post(\n          '/api/workspaces',\n          {\n            workspace: newWorkspace,\n            url: newUrl,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          revalidate();\n          setShowCreateWorkspaceModal(false);\n          setNewWorkpsace('');\n          setNewUrl('');\n        })\n        .catch((error) => {\n          console.dir(error);\n\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newWorkspace, newUrl],\n  );\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal(true);\n  }, []);\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n\n  if (!userData) {\n    return <Navigate replace to=\"/login\" />;\n  }\n  return (\n    <>\n      <Header>\n        <RightMenu>\n          <span onClick={onClickUserProfile}>\n            <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n            {showUserMenu && (\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onCloseUserProfile}>\n                <ProfileModal>\n                  <img src={gravatar.url(userData.nickname, { s: '36px', d: 'retro' })} alt={userData.nickname} />\n                  <div>\n                    <span id=\"profile-name\">{userData.nickname}</span>\n                    <span id=\"profile-active\">Active</span>\n                  </div>\n                </ProfileModal>\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n              </Menu>\n            )}\n          </span>\n        </RightMenu>\n      </Header>\n\n      <WorkspaceWrapper>\n        <Workspaces>\n          {userData?.Workspaces.map((ws) => {\n            return (\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n              </Link>\n            );\n          })}\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n        </Workspaces>\n        <Channels>\n          <WorkspaceName onClick={toggleWorkspaceModal}>Sleact</WorkspaceName>\n          <MenuScroll>\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n              <WorkspaceModal>\n                <h2>Sleact</h2>\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n                <button onClick={onClickAddChannel}>채널 만들기</button>\n                <button onClick={onLogout}>로그아웃</button>\n              </WorkspaceModal>\n            </Menu>\n            <ChannelList />\n            <DMList />\n          </MenuScroll>\n        </Channels>\n        <Chats>\n          <Routes>\n            <Route path=\"/channel/:channel\" element={<Channel />} />\n            <Route path=\"/dm/:id\" element={<DirectMessage />} />\n          </Routes>\n        </Chats>\n      </WorkspaceWrapper>\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n        <form onSubmit={onCreateWorkspace}>\n          <Label id=\"workspace-label\">\n            <span>워크스페이스 이름</span>\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n          </Label>\n          <Label id=\"workspace-url-label\">\n            <span>워크스페이스 url</span>\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n          </Label>\n          <Button type=\"submit\">생성하기</Button>\n        </form>\n      </Modal>\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n    </>\n  );\n};\n\nexport default Workspace;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = (url: string) =>\n  axios\n    .get(url, {\n      withCredentials: true,\n    })\n    .then((response) => response.data);\n\nexport default fetcher;\n"],"names":["show","onCloseModal","setShowInviteChannelModal","useParams","workspace","channel","useInput","newMember","onChangeNewMember","setNewMember","userData","useSWR","fetcher","data","revalidateMembers","revalidate","onInviteMember","useCallback","e","preventDefault","trim","axios","email","then","catch","error","console","dir","toast","response","position","onSubmit","id","value","onChange","type","CreateModal","styled","CloseModalButton","children","stopPropagation","onClick","initialData","useState","setValue","target","sockets","disconnect","io","transports","undefined","CollapseButton","collapse","dedupingInterval","channelData","mutate","channelCollapse","setChannelCollapse","toggleChannelCollapse","prev","className","map","key","name","isActive","to","memberData","socket","useSocket","onlineList","setOnlineList","useEffect","log","on","off","member","isOnline","includes","nickname","setShowInviteWorkspaceModal","revalidateMember","Modal","CreateMenu","Menu","style","closeButton","defaultProps","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","revalidateChannel","onCreateChannel","withCredentials","Channel","loadable","DirectMessage","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","showInviteChannelModal","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkpsace","newUrl","onChangeNewUrl","setNewUrl","onLogout","emit","channels","v","onClickUserProfile","onCloseUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteWorkspace","src","gravatar","s","d","alt","right","top","ws","slice","toUpperCase","left","path","element","InviteChannelModal","replace","Form","Label","Input","Button","Error","Success","LinkContainer"],"sourceRoot":""}