{"version":3,"file":"319.js","mappings":"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","sources":["webpack://alecture/./hooks/useInput.ts","webpack://alecture/./pages/SignUp/index.tsx","webpack://alecture/./pages/SignUp/styles.tsx","webpack://alecture/./utils/fetcher.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\n\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue((e.target.value as unknown) as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import useInput from '@hooks/useInput';\nimport fetcher from '@utils/fetcher';\nimport React, { useCallback, useState, VFC } from 'react';\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from './styles';\nimport { Link, Navigate } from 'react-router-dom';\n\nconst SignUp = () => {\n  const { data, error, revalidate } = useSWR('/api/users', fetcher);\n\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, , setPassword] = useInput('');\n  const [passwordCheck, , setPasswordCheck] = useInput('');\n  const [mismatchError, setMismatchError] = useState(false);\n  const [signUpError, setSignUpError] = useState('');\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n      setMismatchError(e.target.value !== passwordCheck);\n    },\n    [passwordCheck],\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(e.target.value !== password);\n    },\n    [password],\n  );\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!mismatchError && nickname) {\n        setSignUpError('');\n        setSignUpSuccess(false);\n        axios\n          .post('/api/users', {\n            email,\n            nickname,\n            password,\n          })\n          .then((response) => {\n            console.log(response);\n            setSignUpSuccess(true);\n          })\n          .catch((error) => {\n            console.log(error.response);\n            setSignUpError(error.response.data);\n          })\n          .finally(() => {});\n      }\n    },\n    [email, nickname, password, passwordCheck, mismatchError],\n  );\n\n  if (data === undefined) {\n    return <div>로딩중...</div>;\n  }\n\n  if (data) {\n    return <Navigate to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>{signUpError}</Error>}\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <LinkContainer>\n        이미 회원이신가요?&nbsp;\n        <Link to=\"/login\">로그인 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = (url: string) =>\n  axios\n    .get(url, {\n      withCredentials: true,\n    })\n    .then((response) => response.data);\n\nexport default fetcher;\n"],"names":["initialData","useState","value","setValue","useCallback","e","target","useSWR","fetcher","data","error","revalidate","useInput","email","onChangeEmail","nickname","onChangeNickname","password","setPassword","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","onChangePasswordCheck","onSubmit","preventDefault","axios","then","response","console","log","catch","finally","undefined","to","id","type","name","onChange","Header","styled","Form","Label","Input","Button","Error","Success","LinkContainer","url","withCredentials"],"sourceRoot":""}